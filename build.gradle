
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'net.ltgt.gradle:gradle-apt-plugin:0.18'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath 'de.undercouch:gradle-download-task:4.0.1'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: 'net.ltgt.apt'
apply plugin: 'net.ltgt.apt-eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'de.undercouch.download'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "${project.minecraftVersion}-${project.modVersion}"
group= "leviathan143.loottweaker" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LootTweaker"

minecraft {
    version = "${project.minecraftVersion}-${project.forgeVersion}"
    runDir = "run"
	
    mappings = project.mappingsVersion
    makeObfSourceJar = false
    
    replace 'GRADLE:VERSION', project.modVersion
}

repositories 
{
    mavenCentral()
    maven
    {
    	name "Jared"
    	url "http://maven.blamejared.com"
    }
    maven 
    { 
    	name 'JitPack'
    	url 'https://jitpack.io' 
    }
}

configurations {
    shadow
}

dependencies 
{
	def daggerVersion = '2.25.2'
	
 	deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:${project.crafttweakerVersion}"
 	implementation "com.google.dagger:dagger:$daggerVersion"
    shadow "com.google.dagger:dagger:$daggerVersion"
  	annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
 	
 	testImplementation 'com.github.Daomephsta:Saddle:0.0.3'
 	testImplementation 'org.assertj:assertj-core:3.13.2'
 	// Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.5.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	//Tests need dagger too
 	testImplementation "com.google.dagger:dagger:$daggerVersion" 	
  	testAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
}

task includeDaggerLicense(type: Download) {
    src 'https://raw.githubusercontent.com/google/dagger/master/LICENSE.txt'
    dest "${sourceSets.main.output.resourcesDir.path}/leviathan143/loottweaker/shadow/dagger/LICENSE.txt"
}

task includeJavaXInjectLicense(type: Download) {
    src 'https://www.apache.org/licenses/LICENSE-2.0.txt'
    dest "${sourceSets.main.output.resourcesDir.path}/leviathan143/loottweaker/shadow/javax/inject/LICENSE.txt"
}

shadowJar {
    dependsOn includeDaggerLicense, includeJavaXInjectLicense
	classifier = null
    configurations = [project.configurations.shadow]
	relocate 'dagger', 'leviathan143.loottweaker.shadow.dagger'
    relocate 'javax.inject', 'leviathan143.loottweaker.shadow.javax.inject'
	minimize()
}

reobf {
    shadowJar { mappingType = 'SEARGE' }
}

test {
	useJUnitPlatform()
}

publishing {
	publications {
		loottweaker(MavenPublication) {
			artifact jar
			artifact sourceJar
		}
	}
}

artifacts {
    archives shadowJar
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version': project.modVersion, 'mcversion': project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
